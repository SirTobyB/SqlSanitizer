# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: Docker Credentials
  - name: dockerId
    value: jhell
  - name: imageName
    value: sql-sanitizer
  - group: NotifyConfig
steps:
#- script: |
#    docker build -t $(dockerId)/$(imageName):latest -t $(dockerId)/$(imageName):$(Build.BuildId) .
#    docker login -u $(dockerId) -p $(dockerHubPassword)
#    docker push $(dockerId)/$(imageName):latest
#    docker push $(dockerId)/$(imageName):$(Build.BuildId)
#  displayName: 'Build and publish image'
#
#- task: SSH@0
#  inputs:
#    sshEndpoint: 'jhell.dev'
#    runOptions: 'inline'
#    inline: 'docker stop sql-sanitizer &&
#      docker rm sql-sanitizer &&
#      docker pull jhell/sql-sanitizer:latest &&
#      docker run --restart unless-stopped --name sql-sanitizer -p 127.0.0.1:5420:5000 -d jhell/sql-sanitizer:latest'
#  displayName: Pull and start new image

- script: |
    'curl -X POST \
    $(notifyUrl)/api/notification/send \
    -H \'Content-Type: application/json\' \
    -H \'token: $(notifyToken)\' \
    -d \'{
    "ProjectName": "$(System.TeamProject)",
    "Message": "Build finished successful"
    }\''